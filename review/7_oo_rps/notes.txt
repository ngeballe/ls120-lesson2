benefit of the Player and Human subclasses: avoiding the repetition of branching code in multiple methods of Player
cost: the parts of player methods that are the same have to be repeated in subclass methods if some parts of those player methods are different (or do they?)

refactoring to have a Move classs
+ it makes the code in the RPSGame classs more streamlined
- it requires new methods: e.g., we now convert strings to Move objects when creating Move objects, but then convert them back to strings when the displaying the moves in display_winner.
